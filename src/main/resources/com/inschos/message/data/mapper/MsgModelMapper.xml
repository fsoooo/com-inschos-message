<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 命名空间，对sql进行分类化管理（sql隔离） -->
<mapper namespace="com.inschos.message.data.mapper.MsgModelMapper">
    <!-- 在映射文件中配置sql语句 -->
    <!-- 通过select执行查询，id用于标识映射文件中的sql(Statement-id)
    将sql语句封装到mappedstatement中
    #{}表示占位符，#{id}-id表示输入的参数，参数名称就是id,如如果输入参数是简单类型，#{}中的参数可以任意
    ${}拼接sql串，接收参数的内容，不加任何修饰，拼接在sql中(存在sql漏洞)
    ${}接收输入参数的内容，如果传入的类型是简单类型，${}中只能使用value
    parameterType-指定输入参数的类型
    resultType-指定sql输出结果所映射的java对象类型-->
    <!--msg_model表查询字段-->
    <sql id="Base_Column_List">
        `id`,`model_code`,`model_name`,`model_content`,`created_user`,`created_user_type`,`status`,`state`,`created_at`,`updated_at`
    </sql>

    <sql id="Repeat_Column_List">
        `id`
    </sql>

    <!--添加模板-->
    <insert id="addMsgModel" parameterType="MsgModel">
        insert into  msg_model(`model_code`,`model_name`,`model_content`,`created_user`,`created_user_type`,`status`,`state`,`created_at`,`updated_at`)
        values(#{model_code},#{model_name},#{model_content},#{created_user},#{created_user_type},#{status},#{state},#{created_at},#{updated_at})
    </insert>

    <!--获取模板重复 todo find-->
    <select id="getMsgModelRepeat" parameterType="MsgModel" resultType="MsgModel">
        select
        <include refid="Repeat_Column_List"/>
        from msg_model
        where `model_name`=#{model_name}
        limit 1
    </select>

    <!--获取收件列表-->
    <select id="getMsgModelList" parameterType="MsgModelList" resultType="MsgModel">
        select
        <include refid="Base_Column_List"/>
        from  msg_model
        where `id`=#{id}
    </select>
    <!--获取站内信详情，TODO 需要两表联查-->
    <select id="getMsgModelInfo" parameterType="MsgModel" resultType="MsgModel">
        select
        <include refid="Base_Column_List"/>
        from  msg_model
        limit 1
    </select>
    <!--更改收件箱站内信状态-->
    <update id="updateMsgModel" parameterType="MsgModelUpdate">
     update msg_model set
              `status`=#{status}
            where `model_code`=#{model_code}
    </update>


    <!--TODO model里定义多个对象-->
    <select id="findInsurancePolicyListForInsuring"
            parameterType="com.inschos.cloud.trading.model.InsurancePolicyModel"
            resultType="com.inschos.cloud.trading.model.InsurancePolicyModel">
        select
        `cust_warranty_cost`.`id`,`cust_warranty`.`warranty_uuid`,`cust_warranty`.`pre_policy_no`,`cust_warranty`.`warranty_code`,`cust_warranty`.`manager_uuid`,`cust_warranty`.`account_uuid`,`cust_warranty`.`agent_id`,`cust_warranty`.`channel_id`,`cust_warranty`.`plan_id`,`cust_warranty`.`product_id`,`cust_warranty`.`start_time`,`cust_warranty`.`end_time`,`cust_warranty`.`ins_company_id`,`cust_warranty`.`count`,`cust_warranty`.`by_stages_way`,`cust_warranty`.`is_settlement`,`cust_warranty`.`warranty_url`,`cust_warranty`.`warranty_from`,`cust_warranty`.`type`,`cust_warranty`.`warranty_status`,`cust_warranty`.`integral`,`cust_warranty`.`express_no`,`cust_warranty`.`express_company_name`,`cust_warranty`.`express_address`,`cust_warranty`.`express_province_code`,`cust_warranty`.`express_city_code`,`cust_warranty`.`express_county_code`,`cust_warranty`.`delivery_type`,`cust_warranty`.`created_at`,`cust_warranty`.`updated_at`
        from cust_warranty_cost LEFT JOIN cust_warranty ON
        cust_warranty.warranty_uuid=cust_warranty_cost.warranty_uuid
        <where>
            <choose>
                <when test="page.lastId>0">
                    id&gt;#{page.lastId}
                </when>
                <when test="page.start>0">
                    id&gt;=(select id from cust_warranty LEFT JOIN cust_warranty ON
                    cust_warranty.warranty_uuid=cust_warranty_cost.warranty_uuid
                    where cust_warranty.account_uuid=#{account_uuid} AND cust_warranty.state = 1 AND
                    cust_warranty.warranty_status = 1 AND cust_warranty_cost.phase= 1 AND
                    (cust_warranty_cost.pay_status= 201 OR cust_warranty_cost.pay_status = 203 OR
                    cust_warranty_cost.pay_status = 204) AND state=1
                    <if test="search!=null and search!=''">
                        and `cust_warranty`.`warranty_code` like concat("%",#{search},"%")
                    </if>
                    limit #{page.start},1
                    )
                </when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
            AND cust_warranty.account_uuid=#{account_uuid} AND cust_warranty.state = 1 AND cust_warranty.warranty_status
            = 1 AND cust_warranty_cost.phase= 1 AND (cust_warranty_cost.pay_status= 201 OR cust_warranty_cost.pay_status
            = 203 OR cust_warranty_cost.pay_status = 204) AND state=1
            <if test="search!=null and search!=''">
                and `cust_warranty`.`warranty_code` like concat("%",#{search},"%")
            </if>
            limit #{page.offset}
        </where>
    </select>

    <select id="findInsurancePolicyCountForInsuring"
            parameterType="com.inschos.cloud.trading.model.InsurancePolicyModel"
            resultType="long">
        select
        COUNT(cust_warranty_cost.id)
        from cust_warranty_cost LEFT JOIN cust_warranty ON
        cust_warranty.warranty_uuid=cust_warranty_cost.warranty_uuid
        WHERE cust_warranty.account_uuid=#{account_uuid} AND cust_warranty.state = 1 AND cust_warranty.warranty_status
        = 1 AND cust_warranty_cost.phase= 1 AND (cust_warranty_cost.pay_status= 201 OR cust_warranty_cost.pay_status
        = 203 OR cust_warranty_cost.pay_status = 204) AND state=1
        <if test="search!=null and search!=''">
            and `cust_warranty`.`warranty_code` like concat("%",#{search},"%")
        </if>
    </select>
</mapper>